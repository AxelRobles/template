apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: minimal-repo
  title: minimal-repo
  description: Create a new CRA website project
  tags:
    - java
spec:
  parameters:
    - title: Provide some simple information
      required:
        - service
        - name
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          enum:
            - Service
            - API
            - Web page
            - Data pipeline
        service:
          title: Type
          type: string
          description: Type of component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        - title: Fill in some steps
          properties:
            Drift features:
              title: Select features
              type: array
              items:
                type: boolean
                enum:
                  - 'CircleCI setup'
                  - 'Drift k8s app'
                  - 'Atmos setup'
              uniqueItems: true
              ui:widget: checkboxes
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        protectDefaultBranch: true
        repoVisibility: public
        allowMergeCommit: true
        allowSquashMerge: true
        deleteBranchOnMerge: true
        squashMergeCommitTitle: PR_TITLE
        squashMergeCommitMessage: COMMIT_MESSAGES
        allowRebaseMerge: true
        allowAutoMerge: false
        requiredApprovingReviewCount: 1
        collaborators:
          - user: axestours
            access: admin

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}